
!$OPENAD XXX File_start [OAD_intrinsics.f90]
MODULE oad_intrinsics
use w2f__types
use OAD_active
IMPLICIT NONE
SAVE
!
!     **** Statements ****
!
END MODULE

C$OPENAD XXX File_start [all_globals_mod.f]
      MODULE all_globals_mod
      use w2f__types
      use OAD_active
      IMPLICIT NONE
      SAVE
C
C     **** Statements ****
C
      END MODULE
C#########################################################
C This file is part of OpenAD released under the LGPL.   #
C The full COPYRIGHT notice can be found in the top      #
C level directory of the OpenAD distribution             #
C#########################################################
C
C$OPENAD XXX File_start [head.f]
      SUBROUTINE head(NX, NY, X, FVEC, R)
          use OAD_tape
          use OAD_rev

C original arguments get inserted before version
C         ! and declared here together with all local variables
C         ! generated by xaifBooster

      use w2f__types
      use OAD_active
      use oad_intrinsics
      use oad_intrinsics
      use oad_intrinsics
      IMPLICIT NONE
C
C     **** Global Variables & Derived Type Definitions ****
C
      INTEGER(w2f__i8) OpenAD_Symbol_100
      INTEGER(w2f__i8) OpenAD_Symbol_101
      INTEGER(w2f__i8) OpenAD_Symbol_102
      INTEGER(w2f__i8) OpenAD_Symbol_103
      INTEGER(w2f__i8) OpenAD_Symbol_104
      INTEGER(w2f__i8) OpenAD_Symbol_105
      INTEGER(w2f__i8) OpenAD_Symbol_106
      INTEGER(w2f__i8) OpenAD_Symbol_107
      INTEGER(w2f__i8) OpenAD_Symbol_108
      INTEGER(w2f__i8) OpenAD_Symbol_109
      INTEGER(w2f__i8) OpenAD_Symbol_110
      INTEGER(w2f__i8) OpenAD_Symbol_111
      INTEGER(w2f__i8) OpenAD_Symbol_112
      INTEGER(w2f__i8) OpenAD_Symbol_113
      INTEGER(w2f__i8) OpenAD_Symbol_114
      INTEGER(w2f__i8) OpenAD_Symbol_115
      INTEGER(w2f__i8) OpenAD_Symbol_116
      INTEGER(w2f__i8) OpenAD_Symbol_117
      INTEGER(w2f__i8) OpenAD_Symbol_118
      INTEGER(w2f__i8) OpenAD_Symbol_119
      INTEGER(w2f__i8) OpenAD_Symbol_120
      INTEGER(w2f__i8) OpenAD_Symbol_121
      INTEGER(w2f__i8) OpenAD_Symbol_122
      INTEGER(w2f__i8) OpenAD_Symbol_123
      INTEGER(w2f__i8) OpenAD_Symbol_124
      INTEGER(w2f__i8) OpenAD_Symbol_125
      INTEGER(w2f__i8) OpenAD_Symbol_126
      INTEGER(w2f__i8) OpenAD_Symbol_127
      INTEGER(w2f__i8) OpenAD_Symbol_128
      INTEGER(w2f__i8) OpenAD_Symbol_129
      INTEGER(w2f__i8) OpenAD_Symbol_130
      INTEGER(w2f__i8) OpenAD_Symbol_131
      INTEGER(w2f__i8) OpenAD_Symbol_132
      INTEGER(w2f__i8) OpenAD_Symbol_133
      INTEGER(w2f__i8) OpenAD_Symbol_134
      INTEGER(w2f__i8) OpenAD_Symbol_135
      INTEGER(w2f__i8) OpenAD_Symbol_136
      INTEGER(w2f__i8) OpenAD_Symbol_137
      INTEGER(w2f__i8) OpenAD_Symbol_138
      INTEGER(w2f__i8) OpenAD_Symbol_139
      INTEGER(w2f__i8) OpenAD_Symbol_140
      INTEGER(w2f__i8) OpenAD_Symbol_141
      INTEGER(w2f__i8) OpenAD_Symbol_142
      INTEGER(w2f__i8) OpenAD_Symbol_143
      INTEGER(w2f__i8) OpenAD_Symbol_144
      INTEGER(w2f__i8) OpenAD_Symbol_145
      INTEGER(w2f__i8) OpenAD_Symbol_146
      INTEGER(w2f__i8) OpenAD_Symbol_147
      INTEGER(w2f__i8) OpenAD_Symbol_148
      INTEGER(w2f__i8) OpenAD_Symbol_149
      INTEGER(w2f__i8) OpenAD_Symbol_150
      INTEGER(w2f__i8) OpenAD_Symbol_151
      INTEGER(w2f__i8) OpenAD_Symbol_152
      INTEGER(w2f__i8) OpenAD_Symbol_153
      INTEGER(w2f__i8) OpenAD_Symbol_154
      INTEGER(w2f__i8) OpenAD_Symbol_155
      INTEGER(w2f__i8) OpenAD_Symbol_156
      INTEGER(w2f__i8) OpenAD_Symbol_157
      INTEGER(w2f__i8) OpenAD_Symbol_158
      INTEGER(w2f__i8) OpenAD_Symbol_159
      INTEGER(w2f__i8) OpenAD_Symbol_160
      INTEGER(w2f__i8) OpenAD_Symbol_161
      INTEGER(w2f__i8) OpenAD_Symbol_162
      INTEGER(w2f__i8) OpenAD_Symbol_163
      INTEGER(w2f__i8) OpenAD_Symbol_164
      INTEGER(w2f__i8) OpenAD_Symbol_165
      INTEGER(w2f__i8) OpenAD_Symbol_166
      INTEGER(w2f__i8) OpenAD_Symbol_167
      INTEGER(w2f__i8) OpenAD_Symbol_168
      INTEGER(w2f__i8) OpenAD_Symbol_169
      INTEGER(w2f__i8) OpenAD_Symbol_170
      INTEGER(w2f__i8) OpenAD_Symbol_171
      INTEGER(w2f__i8) OpenAD_Symbol_172
      INTEGER(w2f__i8) OpenAD_Symbol_173
      INTEGER(w2f__i8) OpenAD_Symbol_174
      INTEGER(w2f__i8) OpenAD_Symbol_175
      INTEGER(w2f__i8) OpenAD_Symbol_176
      INTEGER(w2f__i8) OpenAD_Symbol_177
      INTEGER(w2f__i8) OpenAD_Symbol_178
      INTEGER(w2f__i8) OpenAD_Symbol_179
      INTEGER(w2f__i8) OpenAD_Symbol_180
      INTEGER(w2f__i8) OpenAD_Symbol_181
      INTEGER(w2f__i8) OpenAD_Symbol_182
      INTEGER(w2f__i8) OpenAD_Symbol_183
      INTEGER(w2f__i8) OpenAD_Symbol_184
      INTEGER(w2f__i8) OpenAD_Symbol_185
      INTEGER(w2f__i8) OpenAD_Symbol_186
      INTEGER(w2f__i8) OpenAD_Symbol_187
      INTEGER(w2f__i8) OpenAD_Symbol_188
      REAL(w2f__8) OpenAD_Symbol_77
      INTEGER(w2f__i8) OpenAD_Symbol_99
      type(active) :: OpenAD_prop_0
      type(active) :: OpenAD_prop_1
      type(active) :: OpenAD_prop_10
      type(active) :: OpenAD_prop_11
      type(active) :: OpenAD_prop_12
      type(active) :: OpenAD_prop_2
      type(active) :: OpenAD_prop_3
      type(active) :: OpenAD_prop_4
      type(active) :: OpenAD_prop_5
      type(active) :: OpenAD_prop_6
      type(active) :: OpenAD_prop_7
      type(active) :: OpenAD_prop_8
      type(active) :: OpenAD_prop_9
C
C     **** Parameters and Result ****
C
      INTEGER(w2f__i4) NX
      INTEGER(w2f__i4) NY
      type(active) :: X(1:INT((NX*NY)))
      type(active) :: FVEC(1:INT((NX*NY)))
      REAL(w2f__8) R
C
C     **** Local Variables and Functions ****
C
      type(active) :: DPDX
      type(active) :: DPDY
      REAL(w2f__8) FOUR
      PARAMETER ( FOUR = 4.0D00)
      REAL(w2f__8) HX
      REAL(w2f__8) HX2
      REAL(w2f__8) HY
      REAL(w2f__8) HY2
      INTEGER(w2f__i4) I
      INTEGER(w2f__i4) J
      INTEGER(w2f__i4) K
      INTEGER(w2f__i4) N
      REAL(w2f__8) NXP1
      REAL(w2f__8) NYP1
      REAL(w2f__8) ONE
      PARAMETER ( ONE = 1.0D00)
      type(active) :: P
      type(active) :: PB
      type(active) :: PBB
      type(active) :: PBL
      type(active) :: PBLAP
      type(active) :: PBR
      type(active) :: PL
      type(active) :: PLAP
      type(active) :: PLL
      type(active) :: PLLAP
      type(active) :: PR
      type(active) :: PRLAP
      type(active) :: PRR
      type(active) :: PT
      type(active) :: PTL
      type(active) :: PTLAP
      type(active) :: PTR
      type(active) :: PTT
      REAL(w2f__8) THREE
      PARAMETER ( THREE = 3.0D00)
      REAL(w2f__8) TWO
      PARAMETER ( TWO = 2.0D00)
      REAL(w2f__8) ZERO
      PARAMETER ( ZERO = 0.0D00)
      REAL(w2f__8) OpenAD_Symbol_0
      REAL(w2f__8) OpenAD_Symbol_1
      REAL(w2f__8) OpenAD_Symbol_12
      REAL(w2f__8) OpenAD_Symbol_13
      REAL(w2f__8) OpenAD_Symbol_16
      REAL(w2f__8) OpenAD_Symbol_17
      INTEGER(w2f__i8) OpenAD_Symbol_189
      INTEGER(w2f__i8) OpenAD_Symbol_190
      INTEGER(w2f__i8) OpenAD_Symbol_191
      INTEGER(w2f__i8) OpenAD_Symbol_192
      INTEGER(w2f__i8) OpenAD_Symbol_193
      INTEGER(w2f__i8) OpenAD_Symbol_194
      INTEGER(w2f__i8) OpenAD_Symbol_195
      INTEGER(w2f__i8) OpenAD_Symbol_196
      INTEGER(w2f__i8) OpenAD_Symbol_197
      INTEGER(w2f__i8) OpenAD_Symbol_198
      INTEGER(w2f__i8) OpenAD_Symbol_199
      REAL(w2f__8) OpenAD_Symbol_2
      REAL(w2f__8) OpenAD_Symbol_20
      INTEGER(w2f__i8) OpenAD_Symbol_200
      INTEGER(w2f__i8) OpenAD_Symbol_201
      INTEGER(w2f__i8) OpenAD_Symbol_202
      INTEGER(w2f__i8) OpenAD_Symbol_203
      INTEGER(w2f__i8) OpenAD_Symbol_204
      INTEGER(w2f__i8) OpenAD_Symbol_205
      INTEGER(w2f__i8) OpenAD_Symbol_206
      INTEGER(w2f__i8) OpenAD_Symbol_207
      INTEGER(w2f__i8) OpenAD_Symbol_208
      INTEGER(w2f__i8) OpenAD_Symbol_209
      REAL(w2f__8) OpenAD_Symbol_21
      INTEGER(w2f__i8) OpenAD_Symbol_210
      REAL(w2f__8) OpenAD_Symbol_211
      REAL(w2f__8) OpenAD_Symbol_212
      REAL(w2f__8) OpenAD_Symbol_213
      REAL(w2f__8) OpenAD_Symbol_214
      REAL(w2f__8) OpenAD_Symbol_215
      REAL(w2f__8) OpenAD_Symbol_216
      REAL(w2f__8) OpenAD_Symbol_217
      REAL(w2f__8) OpenAD_Symbol_218
      REAL(w2f__8) OpenAD_Symbol_219
      REAL(w2f__8) OpenAD_Symbol_220
      REAL(w2f__8) OpenAD_Symbol_221
      REAL(w2f__8) OpenAD_Symbol_222
      INTEGER(w2f__i8) OpenAD_Symbol_223
      INTEGER(w2f__i8) OpenAD_Symbol_224
      INTEGER(w2f__i8) OpenAD_Symbol_225
      INTEGER(w2f__i8) OpenAD_Symbol_226
      INTEGER(w2f__i8) OpenAD_Symbol_227
      INTEGER(w2f__i8) OpenAD_Symbol_228
      INTEGER(w2f__i8) OpenAD_Symbol_229
      INTEGER(w2f__i8) OpenAD_Symbol_230
      INTEGER(w2f__i8) OpenAD_Symbol_231
      INTEGER(w2f__i8) OpenAD_Symbol_232
      INTEGER(w2f__i8) OpenAD_Symbol_233
      INTEGER(w2f__i8) OpenAD_Symbol_234
      INTEGER(w2f__i8) OpenAD_Symbol_235
      INTEGER(w2f__i8) OpenAD_Symbol_236
      INTEGER(w2f__i8) OpenAD_Symbol_237
      INTEGER(w2f__i8) OpenAD_Symbol_238
      INTEGER(w2f__i8) OpenAD_Symbol_239
      REAL(w2f__8) OpenAD_Symbol_24
      REAL(w2f__8) OpenAD_Symbol_240
      REAL(w2f__8) OpenAD_Symbol_25
      REAL(w2f__8) OpenAD_Symbol_28
      REAL(w2f__8) OpenAD_Symbol_29
      REAL(w2f__8) OpenAD_Symbol_32
      REAL(w2f__8) OpenAD_Symbol_33
      REAL(w2f__8) OpenAD_Symbol_36
      REAL(w2f__8) OpenAD_Symbol_37
      REAL(w2f__8) OpenAD_Symbol_4
      REAL(w2f__8) OpenAD_Symbol_40
      REAL(w2f__8) OpenAD_Symbol_41
      REAL(w2f__8) OpenAD_Symbol_44
      REAL(w2f__8) OpenAD_Symbol_45
      REAL(w2f__8) OpenAD_Symbol_48
      REAL(w2f__8) OpenAD_Symbol_49
      REAL(w2f__8) OpenAD_Symbol_5
      REAL(w2f__8) OpenAD_Symbol_52
      REAL(w2f__8) OpenAD_Symbol_53
      REAL(w2f__8) OpenAD_Symbol_56
      REAL(w2f__8) OpenAD_Symbol_58
      REAL(w2f__8) OpenAD_Symbol_59
      REAL(w2f__8) OpenAD_Symbol_6
      REAL(w2f__8) OpenAD_Symbol_60
      REAL(w2f__8) OpenAD_Symbol_61
      REAL(w2f__8) OpenAD_Symbol_63
      REAL(w2f__8) OpenAD_Symbol_64
      REAL(w2f__8) OpenAD_Symbol_65
      REAL(w2f__8) OpenAD_Symbol_66
      REAL(w2f__8) OpenAD_Symbol_67
      REAL(w2f__8) OpenAD_Symbol_68
      REAL(w2f__8) OpenAD_Symbol_70
      REAL(w2f__8) OpenAD_Symbol_71
      REAL(w2f__8) OpenAD_Symbol_72
      REAL(w2f__8) OpenAD_Symbol_74
      REAL(w2f__8) OpenAD_Symbol_75
      REAL(w2f__8) OpenAD_Symbol_78
      REAL(w2f__8) OpenAD_Symbol_79
      REAL(w2f__8) OpenAD_Symbol_8
      REAL(w2f__8) OpenAD_Symbol_80
      REAL(w2f__8) OpenAD_Symbol_81
      REAL(w2f__8) OpenAD_Symbol_82
      REAL(w2f__8) OpenAD_Symbol_83
      REAL(w2f__8) OpenAD_Symbol_84
      REAL(w2f__8) OpenAD_Symbol_85
      REAL(w2f__8) OpenAD_Symbol_86
      REAL(w2f__8) OpenAD_Symbol_87
      REAL(w2f__8) OpenAD_Symbol_88
      REAL(w2f__8) OpenAD_Symbol_89
      REAL(w2f__8) OpenAD_Symbol_9
      REAL(w2f__8) OpenAD_Symbol_90
      REAL(w2f__8) OpenAD_Symbol_91
      REAL(w2f__8) OpenAD_Symbol_92
      REAL(w2f__8) OpenAD_Symbol_93
      REAL(w2f__8) OpenAD_Symbol_94
      REAL(w2f__8) OpenAD_Symbol_95
      REAL(w2f__8) OpenAD_Symbol_96
      REAL(w2f__8) OpenAD_Symbol_97
      REAL(w2f__8) OpenAD_Symbol_98


          integer iaddr
          external iaddr
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(FVEC)
C
C     **** Statements ****
C

         if (our_rev_mode%plain) then
C original function
C$OPENAD XXX Template ad_template.f
      N = (NX * NY)
      NXP1 = (NX + 1)
      NYP1 = (NY + 1)
      HX = (1.0D00 / NXP1)
      HY = (1.0D00 / NYP1)
      HY2 = (HY * HY)
      HX2 = (HX * HX)
      DO I = 1, NY, 1
        DO J = 1, NX, 1
          K = (J + NX *(I +(-1)))
          IF((I .eq. 1) .OR.(J .eq. 1)) THEN
            PBL%v = 0.0D00
          ELSE
            PBL%v = X(K-NX+(-1))%v
          ENDIF
          IF (I.eq.1) THEN
            PB%v = 0.0D00
            PBB%v = X(K)%v
          ELSE
            IF (I.eq.2) THEN
              PB%v = X(K-NX)%v
              PBB%v = 0.0D00
            ELSE
              PB%v = X(K-NX)%v
              PBB%v = X(K-NX*2)%v
            ENDIF
          ENDIF
          IF ((NX.eq.J).OR.(I.eq.1)) THEN
            PBR%v = 0.0D00
          ELSE
            PBR%v = X(K-NX+1)%v
          ENDIF
          IF (J.eq.1) THEN
            PL%v = 0.0D00
            PLL%v = X(K)%v
          ELSE
            IF (J.eq.2) THEN
              PL%v = X(K+(-1))%v
              PLL%v = 0.0D00
            ELSE
              PL%v = X(K+(-1))%v
              PLL%v = X(K+(-2))%v
            ENDIF
          ENDIF
          P%v = X(K)%v
          IF (J.eq.(NX+(-1))) THEN
            PR%v = X(K+1)%v
            PRR%v = 0.0D00
          ELSE
            IF (NX.eq.J) THEN
              PR%v = 0.0D00
              PRR%v = X(K)%v
            ELSE
              PR%v = X(K+1)%v
              PRR%v = X(K+2)%v
            ENDIF
          ENDIF
          IF ((NY.eq.I).OR.(J.eq.1)) THEN
            PTL%v = 0.0D00
          ELSE
            PTL%v = X(NX+K+(-1))%v
          ENDIF
          IF (I.eq.(NY+(-1))) THEN
            PT%v = X(NX+K)%v
            PTT%v = 0.0D00
          ELSE
            IF (NY.eq.I) THEN
              PT%v = 0.0D00
              PTT%v = (X(K)%v+HY*2.0D00)
            ELSE
              PT%v = X(NX+K)%v
              PTT%v = X(K+NX*2)%v
            ENDIF
          ENDIF
          IF ((NX.eq.J).OR.(NY.eq.I)) THEN
            PTR%v = 0.0D00
          ELSE
            PTR%v = X(NX+K+1)%v
          ENDIF
          DPDY%v = ((PT%v-PB%v)/(HY*2.0D00))
          DPDX%v = ((PR%v-PL%v)/(HX*2.0D00))
          PBLAP%v = (((PBB%v+P%v-PB%v*2.0D00)/HY2)+((PBL%v+PBR%v-PB%v*2.
     +0D00)/HX2))
          PLLAP%v = (((PBL%v+PTL%v-PL%v*2.0D00)/HY2)+((PLL%v+P%v-PL%v*2.
     +0D00)/HX2))
          PLAP%v = (((PB%v+PT%v-P%v*2.0D00)/HY2)+((PL%v+PR%v-P%v*2.0D00)
     +/HX2))
          PRLAP%v = (((P%v+PRR%v-PR%v*2.0D00)/HX2)+((PBR%v+PTR%v-PR%v*2.
     +0D00)/HY2))
          PTLAP%v = (((P%v+PTT%v-PT%v*2.0D00)/HY2)+((PTL%v+PTR%v-PT%v*2.
     +0D00)/HX2))
          FVEC(INT(K))%v = (((PBLAP%v+PTLAP%v-PLAP%v*2.0D00)/HY2)+((PLLA
     +P%v+PRLAP%v-PLAP%v*2.0D00)/HX2)-R*(((DPDY%v*(PRLAP%v-PLLAP%v))/(HX
     +*2.0D00))-((DPDX%v*(PTLAP%v-PBLAP%v))/(HY*2.0D00))))
        END DO
      END DO
      DO K = 1,N,1
        FVEC(INT(K))%v = (FVEC(K)%v*HX2*HY2)
      END DO
          end if
          if (our_rev_mode%tape) then
C taping
C$OPENAD XXX Template ad_template.f
      N = (NX*NY)
      NXP1 = (NX+1)
      NYP1 = (NY+1)
      HX = (1.0D00/NXP1)
      HY = (1.0D00/NYP1)
      HY2 = (HY*HY)
      HX2 = (HX*HX)
      OpenAD_Symbol_117 = 0_w2f__i8
      DO I = 1,NY,1
        OpenAD_Symbol_118 = 0_w2f__i8
        DO J = 1,NX,1
          K = (J+NX*(I+(-1)))
          IF ((I.eq.1).OR.(J.eq.1)) THEN
            PBL%v = 0.0D00
            OpenAD_Symbol_119 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_119
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PBL%v = X(K-NX+(-1))%v
            OpenAD_Symbol_204 = (K-NX+(-1))
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_204
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_120 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_120
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF (I.eq.1) THEN
            PB%v = 0.0D00
            PBB%v = X(K)%v
            integer_tape(integer_tape_pointer) = K
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_123 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_123
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF (I.eq.2) THEN
              PB%v = X(K-NX)%v
              PBB%v = 0.0D00
              OpenAD_Symbol_201 = (K-NX)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_201
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_121 = 1_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_121
              integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PB%v = X(K-NX)%v
              PBB%v = X(K-NX*2)%v
              OpenAD_Symbol_202 = (K-NX)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_202
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_203 = (K-NX*2)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_203
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_122 = 0_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_122
              integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_124 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_124
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF ((NX.eq.J).OR.(I.eq.1)) THEN
            PBR%v = 0.0D00
            OpenAD_Symbol_125 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_125
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PBR%v = X(K-NX+1)%v
            OpenAD_Symbol_200 = (K-NX+1)
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_200
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_126 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_126
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF (J.eq.1) THEN
            PL%v = 0.0D00
            PLL%v = X(K)%v
            integer_tape(integer_tape_pointer) = K
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_129 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_129
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF (J.eq.2) THEN
              PL%v = X(K+(-1))%v
              PLL%v = 0.0D00
              OpenAD_Symbol_197 = (K+(-1))
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_197
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_127 = 1_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_127
              integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PL%v = X(K+(-1))%v
              PLL%v = X(K+(-2))%v
              OpenAD_Symbol_198 = (K+(-1))
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_198
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_199 = (K+(-2))
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_199
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_128 = 0_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_128
              integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_130 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_130
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          P%v = X(K)%v
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          IF (J.eq.(NX+(-1))) THEN
            PR%v = X(K+1)%v
            PRR%v = 0.0D00
            OpenAD_Symbol_189 = (K+1)
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_189
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_133 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_133
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF (NX.eq.J) THEN
              PR%v = 0.0D00
              PRR%v = X(K)%v
              integer_tape(integer_tape_pointer) = K
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_131 = 1_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_131
              integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PR%v = X(K+1)%v
              PRR%v = X(K+2)%v
              OpenAD_Symbol_195 = (K+1)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_195
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_196 = (K+2)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_196
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_132 = 0_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_132
              integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_134 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_134
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF ((NY.eq.I).OR.(J.eq.1)) THEN
            PTL%v = 0.0D00
            OpenAD_Symbol_135 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_135
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PTL%v = X(NX+K+(-1))%v
            OpenAD_Symbol_194 = (NX+K+(-1))
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_194
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_136 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_136
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF (I.eq.(NY+(-1))) THEN
            PT%v = X(NX+K)%v
            PTT%v = 0.0D00
            OpenAD_Symbol_190 = (NX+K)
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_190
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_139 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_139
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            IF (NY.eq.I) THEN
              PT%v = 0.0D00
              PTT%v = (X(K)%v+HY*2.0D00)
              integer_tape(integer_tape_pointer) = K
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_137 = 1_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_137
              integer_tape_pointer = integer_tape_pointer+1
            ELSE
              PT%v = X(NX+K)%v
              PTT%v = X(K+NX*2)%v
              OpenAD_Symbol_192 = (NX+K)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_192
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_193 = (K+NX*2)
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_193
              integer_tape_pointer = integer_tape_pointer+1
              OpenAD_Symbol_138 = 0_w2f__i8
              integer_tape(integer_tape_pointer) = OpenAD_Symbol_138
              integer_tape_pointer = integer_tape_pointer+1
            ENDIF
            OpenAD_Symbol_140 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_140
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          IF ((NX.eq.J).OR.(NY.eq.I)) THEN
            PTR%v = 0.0D00
            OpenAD_Symbol_141 = 1_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_141
            integer_tape_pointer = integer_tape_pointer+1
          ELSE
            PTR%v = X(NX+K+1)%v
            OpenAD_Symbol_191 = (NX+K+1)
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_191
            integer_tape_pointer = integer_tape_pointer+1
            OpenAD_Symbol_142 = 0_w2f__i8
            integer_tape(integer_tape_pointer) = OpenAD_Symbol_142
            integer_tape_pointer = integer_tape_pointer+1
          ENDIF
          OpenAD_Symbol_0 = (PT%v-PB%v)
          OpenAD_Symbol_1 = (HY*2.0D00)
          DPDY%v = (OpenAD_Symbol_0/OpenAD_Symbol_1)
          OpenAD_Symbol_2 = (INT(1_w2f__i8)/OpenAD_Symbol_1)
          OpenAD_Symbol_4 = (PR%v-PL%v)
          OpenAD_Symbol_5 = (HX*2.0D00)
          DPDX%v = (OpenAD_Symbol_4/OpenAD_Symbol_5)
          OpenAD_Symbol_6 = (INT(1_w2f__i8)/OpenAD_Symbol_5)
          OpenAD_Symbol_8 = (PBB%v+P%v-PB%v*2.0D00)
          OpenAD_Symbol_12 = (PBL%v+PBR%v-PB%v*2.0D00)
          PBLAP%v = ((OpenAD_Symbol_8/HY2)+(OpenAD_Symbol_12/HX2))
          OpenAD_Symbol_9 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_13 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_16 = (PBL%v+PTL%v-PL%v*2.0D00)
          OpenAD_Symbol_20 = (PLL%v+P%v-PL%v*2.0D00)
          PLLAP%v = ((OpenAD_Symbol_16/HY2)+(OpenAD_Symbol_20/HX2))
          OpenAD_Symbol_17 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_21 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_24 = (PB%v+PT%v-P%v*2.0D00)
          OpenAD_Symbol_28 = (PL%v+PR%v-P%v*2.0D00)
          PLAP%v = ((OpenAD_Symbol_24/HY2)+(OpenAD_Symbol_28/HX2))
          OpenAD_Symbol_25 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_29 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_32 = (P%v+PRR%v-PR%v*2.0D00)
          OpenAD_Symbol_36 = (PBR%v+PTR%v-PR%v*2.0D00)
          PRLAP%v = ((OpenAD_Symbol_32/HX2)+(OpenAD_Symbol_36/HY2))
          OpenAD_Symbol_33 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_37 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_40 = (P%v+PTT%v-PT%v*2.0D00)
          OpenAD_Symbol_44 = (PTL%v+PTR%v-PT%v*2.0D00)
          PTLAP%v = ((OpenAD_Symbol_40/HY2)+(OpenAD_Symbol_44/HX2))
          OpenAD_Symbol_41 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_45 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_48 = (PBLAP%v+PTLAP%v-PLAP%v*2.0D00)
          OpenAD_Symbol_52 = (PLLAP%v+PRLAP%v-PLAP%v*2.0D00)
          OpenAD_Symbol_63 = (PRLAP%v-PLLAP%v)
          OpenAD_Symbol_59 = (DPDY%v*OpenAD_Symbol_63)
          OpenAD_Symbol_60 = (HX*2.0D00)
          OpenAD_Symbol_70 = (PTLAP%v-PBLAP%v)
          OpenAD_Symbol_66 = (DPDX%v*OpenAD_Symbol_70)
          OpenAD_Symbol_67 = (HY*2.0D00)
          OpenAD_Symbol_56 = ((OpenAD_Symbol_59/OpenAD_Symbol_60)-(OpenA
     +D_Symbol_66/OpenAD_Symbol_67))
          FVEC(INT(K))%v = ((OpenAD_Symbol_48/HY2)+(OpenAD_Symbol_52/HX2
     +)-R*OpenAD_Symbol_56)
          OpenAD_Symbol_49 = (INT(1_w2f__i8)/HY2)
          OpenAD_Symbol_53 = (INT(1_w2f__i8)/HX2)
          OpenAD_Symbol_64 = OpenAD_Symbol_63
          OpenAD_Symbol_65 = DPDY%v
          OpenAD_Symbol_61 = (INT(1_w2f__i8)/OpenAD_Symbol_60)
          OpenAD_Symbol_71 = OpenAD_Symbol_70
          OpenAD_Symbol_72 = DPDX%v
          OpenAD_Symbol_68 = (INT(1_w2f__i8)/OpenAD_Symbol_67)
          OpenAD_Symbol_58 = R
          OpenAD_Symbol_78 = (OpenAD_Symbol_58*INT((-1_w2f__i8)))
          OpenAD_Symbol_79 = (INT((-1_w2f__i8))*OpenAD_Symbol_78)
          OpenAD_Symbol_80 = (OpenAD_Symbol_72*OpenAD_Symbol_68*OpenAD_S
     +ymbol_79)
          OpenAD_Symbol_81 = (OpenAD_Symbol_6*OpenAD_Symbol_71*OpenAD_Sy
     +mbol_68*OpenAD_Symbol_79)
          OpenAD_Symbol_82 = (OpenAD_Symbol_65*OpenAD_Symbol_61*OpenAD_S
     +ymbol_78)
          OpenAD_Symbol_83 = (OpenAD_Symbol_2*OpenAD_Symbol_64*OpenAD_Sy
     +mbol_61*OpenAD_Symbol_78)
          OpenAD_Symbol_84 = (OpenAD_Symbol_53+OpenAD_Symbol_82)
          OpenAD_Symbol_85 = (OpenAD_Symbol_53+INT((-1_w2f__i8))*OpenAD_
     +Symbol_82)
          OpenAD_Symbol_86 = (2.0D00*INT((-1_w2f__i8))*OpenAD_Symbol_53+
     +2.0D00*INT((-1_w2f__i8))*OpenAD_Symbol_49)
          OpenAD_Symbol_87 = (OpenAD_Symbol_49+OpenAD_Symbol_80)
          OpenAD_Symbol_88 = (OpenAD_Symbol_49+INT((-1_w2f__i8))*OpenAD_
     +Symbol_80)
          OpenAD_Symbol_89 = (OpenAD_Symbol_45*OpenAD_Symbol_87)
          OpenAD_Symbol_90 = (OpenAD_Symbol_41*OpenAD_Symbol_87)
          OpenAD_Symbol_91 = (OpenAD_Symbol_37*OpenAD_Symbol_84)
          OpenAD_Symbol_92 = (OpenAD_Symbol_33*OpenAD_Symbol_84)
          OpenAD_Symbol_93 = (OpenAD_Symbol_29*OpenAD_Symbol_86)
          OpenAD_Symbol_94 = (OpenAD_Symbol_25*OpenAD_Symbol_86)
          OpenAD_Symbol_95 = (OpenAD_Symbol_21*OpenAD_Symbol_85)
          OpenAD_Symbol_96 = (OpenAD_Symbol_17*OpenAD_Symbol_85)
          OpenAD_Symbol_97 = (OpenAD_Symbol_13*OpenAD_Symbol_88)
          OpenAD_Symbol_98 = (OpenAD_Symbol_9*OpenAD_Symbol_88)
          double_tape(double_tape_pointer) = OpenAD_Symbol_81
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_83
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_89
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_90
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_91
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_92
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_93
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_94
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_95
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_96
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_97
          double_tape_pointer = double_tape_pointer+1
          double_tape(double_tape_pointer) = OpenAD_Symbol_98
          double_tape_pointer = double_tape_pointer+1
          integer_tape(integer_tape_pointer) = K
          integer_tape_pointer = integer_tape_pointer+1
          OpenAD_Symbol_118 = (INT(OpenAD_Symbol_118)+INT(1_w2f__i8))
        END DO
        integer_tape(integer_tape_pointer) = OpenAD_Symbol_118
        integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_117 = (INT(OpenAD_Symbol_117)+INT(1_w2f__i8))
      END DO
      integer_tape(integer_tape_pointer) = OpenAD_Symbol_117
      integer_tape_pointer = integer_tape_pointer+1
      OpenAD_Symbol_143 = 0_w2f__i8
      DO K = 1,N,1
        OpenAD_Symbol_74 = (HX2*HY2)
        OpenAD_Symbol_77 = (FVEC(K)%v*OpenAD_Symbol_74)
        OpenAD_Symbol_75 = OpenAD_Symbol_74
        FVEC(INT(K))%v = OpenAD_Symbol_77
        double_tape(double_tape_pointer) = OpenAD_Symbol_75
        double_tape_pointer = double_tape_pointer+1
        integer_tape(integer_tape_pointer) = K
        integer_tape_pointer = integer_tape_pointer+1
        OpenAD_Symbol_143 = (INT(OpenAD_Symbol_143)+INT(1_w2f__i8))
      END DO
      integer_tape(integer_tape_pointer) = OpenAD_Symbol_143
      integer_tape_pointer = integer_tape_pointer+1
          end if
          if (our_rev_mode%adjoint) then
C adjoint
      integer_tape_pointer = integer_tape_pointer-1
      OpenAD_Symbol_99 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_100 = 1
      do while (INT(OpenAD_Symbol_100).LE.INT(OpenAD_Symbol_99))
        integer_tape_pointer = integer_tape_pointer-1
        OpenAD_Symbol_239 = integer_tape(integer_tape_pointer)
        double_tape_pointer = double_tape_pointer-1
        OpenAD_Symbol_240 = double_tape(double_tape_pointer)
        OpenAD_prop_12%d = OpenAD_prop_12%d+FVEC(INT(OpenAD_Symbol_239))
     +%d*(OpenAD_Symbol_240)
        FVEC(INT(OpenAD_Symbol_239))%d = 0.0d0
        FVEC(INT(OpenAD_Symbol_239))%d = FVEC(INT(OpenAD_Symbol_239))%d+
     +OpenAD_prop_12%d
        OpenAD_prop_12%d = 0.0d0
        OpenAD_Symbol_100 = INT(OpenAD_Symbol_100)+1
      END DO
      integer_tape_pointer = integer_tape_pointer-1
      OpenAD_Symbol_101 = integer_tape(integer_tape_pointer)
      OpenAD_Symbol_102 = 1
      do while (INT(OpenAD_Symbol_102).LE.INT(OpenAD_Symbol_101))
        integer_tape_pointer = integer_tape_pointer-1
        OpenAD_Symbol_103 = integer_tape(integer_tape_pointer)
        OpenAD_Symbol_104 = 1
        do while (INT(OpenAD_Symbol_104).LE.INT(OpenAD_Symbol_103))
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_210 = integer_tape(integer_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_211 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_212 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_213 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_214 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_215 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_216 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_217 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_218 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_219 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_220 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_221 = double_tape(double_tape_pointer)
          double_tape_pointer = double_tape_pointer-1
          OpenAD_Symbol_222 = double_tape(double_tape_pointer)
          OpenAD_prop_2%d = OpenAD_prop_2%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_211)
          OpenAD_prop_3%d = OpenAD_prop_3%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_212)
          OpenAD_prop_4%d = OpenAD_prop_4%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_213)
          OpenAD_prop_5%d = OpenAD_prop_5%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_214)
          OpenAD_prop_6%d = OpenAD_prop_6%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_215)
          OpenAD_prop_7%d = OpenAD_prop_7%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_216)
          OpenAD_prop_8%d = OpenAD_prop_8%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_217)
          OpenAD_prop_9%d = OpenAD_prop_9%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_218)
          OpenAD_prop_10%d = OpenAD_prop_10%d+FVEC(INT(OpenAD_Symbol_210
     +))%d*(OpenAD_Symbol_219)
          OpenAD_prop_11%d = OpenAD_prop_11%d+FVEC(INT(OpenAD_Symbol_210
     +))%d*(OpenAD_Symbol_220)
          OpenAD_prop_0%d = OpenAD_prop_0%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_221)
          OpenAD_prop_1%d = OpenAD_prop_1%d+FVEC(INT(OpenAD_Symbol_210))
     +%d*(OpenAD_Symbol_222)
          FVEC(INT(OpenAD_Symbol_210))%d = 0.0d0
          PT%d = PT%d+OpenAD_prop_11%d*(-2.0D00)
          PTR%d = PTR%d+OpenAD_prop_11%d
          PTL%d = PTL%d+OpenAD_prop_11%d
          OpenAD_prop_11%d = 0.0d0
          PT%d = PT%d+OpenAD_prop_10%d*(-2.0D00)
          PTT%d = PTT%d+OpenAD_prop_10%d
          P%d = P%d+OpenAD_prop_10%d
          OpenAD_prop_10%d = 0.0d0
          PR%d = PR%d+OpenAD_prop_9%d*(-2.0D00)
          PTR%d = PTR%d+OpenAD_prop_9%d
          PBR%d = PBR%d+OpenAD_prop_9%d
          OpenAD_prop_9%d = 0.0d0
          PR%d = PR%d+OpenAD_prop_8%d*(-2.0D00)
          PRR%d = PRR%d+OpenAD_prop_8%d
          P%d = P%d+OpenAD_prop_8%d
          OpenAD_prop_8%d = 0.0d0
          P%d = P%d+OpenAD_prop_7%d*(-2.0D00)
          PR%d = PR%d+OpenAD_prop_7%d
          PL%d = PL%d+OpenAD_prop_7%d
          OpenAD_prop_7%d = 0.0d0
          P%d = P%d+OpenAD_prop_6%d*(-2.0D00)
          PT%d = PT%d+OpenAD_prop_6%d
          PB%d = PB%d+OpenAD_prop_6%d
          OpenAD_prop_6%d = 0.0d0
          PL%d = PL%d+OpenAD_prop_5%d*(-2.0D00)
          P%d = P%d+OpenAD_prop_5%d
          PLL%d = PLL%d+OpenAD_prop_5%d
          OpenAD_prop_5%d = 0.0d0
          PL%d = PL%d+OpenAD_prop_4%d*(-2.0D00)
          PTL%d = PTL%d+OpenAD_prop_4%d
          PBL%d = PBL%d+OpenAD_prop_4%d
          OpenAD_prop_4%d = 0.0d0
          PB%d = PB%d+OpenAD_prop_3%d*(-2.0D00)
          PBR%d = PBR%d+OpenAD_prop_3%d
          PBL%d = PBL%d+OpenAD_prop_3%d
          OpenAD_prop_3%d = 0.0d0
          PB%d = PB%d+OpenAD_prop_2%d*(-2.0D00)
          P%d = P%d+OpenAD_prop_2%d
          PBB%d = PBB%d+OpenAD_prop_2%d
          OpenAD_prop_2%d = 0.0d0
          PL%d = PL%d-OpenAD_prop_1%d
          PR%d = PR%d+OpenAD_prop_1%d
          OpenAD_prop_1%d = 0.0d0
          PB%d = PB%d-OpenAD_prop_0%d
          PT%d = PT%d+OpenAD_prop_0%d
          OpenAD_prop_0%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_105 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_105.ne.0) THEN
            PTR%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_223 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_223))%d = X(INT(OpenAD_Symbol_223))%d+PT
     +R%d
            PTR%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_106 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_106.ne.0) THEN
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_209 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_209))%d = X(INT(OpenAD_Symbol_209))%d+PT
     +%d
            PT%d = 0.0d0
            PTT%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_107 = integer_tape(integer_tape_pointer)
            IF (OpenAD_Symbol_107.ne.0) THEN
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_224 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_224))%d = X(INT(OpenAD_Symbol_224))%d+
     +PTT%d
              PTT%d = 0.0d0
              PT%d = 0.0d0
            ELSE
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_225 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_225))%d = X(INT(OpenAD_Symbol_225))%d+
     +PTT%d
              PTT%d = 0.0d0
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_226 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_226))%d = X(INT(OpenAD_Symbol_226))%d+
     +PT%d
              PT%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_108 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_108.ne.0) THEN
            PTL%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_227 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_227))%d = X(INT(OpenAD_Symbol_227))%d+PT
     +L%d
            PTL%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_109 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_109.ne.0) THEN
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_208 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_208))%d = X(INT(OpenAD_Symbol_208))%d+PR
     +%d
            PR%d = 0.0d0
            PRR%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_110 = integer_tape(integer_tape_pointer)
            IF (OpenAD_Symbol_110.ne.0) THEN
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_228 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_228))%d = X(INT(OpenAD_Symbol_228))%d+
     +PRR%d
              PRR%d = 0.0d0
              PR%d = 0.0d0
            ELSE
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_229 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_229))%d = X(INT(OpenAD_Symbol_229))%d+
     +PRR%d
              PRR%d = 0.0d0
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_230 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_230))%d = X(INT(OpenAD_Symbol_230))%d+
     +PR%d
              PR%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_207 = integer_tape(integer_tape_pointer)
          X(INT(OpenAD_Symbol_207))%d = X(INT(OpenAD_Symbol_207))%d+P%d
          P%d = 0.0d0
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_111 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_111.ne.0) THEN
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_206 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_206))%d = X(INT(OpenAD_Symbol_206))%d+PL
     +L%d
            PLL%d = 0.0d0
            PL%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_112 = integer_tape(integer_tape_pointer)
            IF (OpenAD_Symbol_112.ne.0) THEN
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_231 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_231))%d = X(INT(OpenAD_Symbol_231))%d+
     +PL%d
              PL%d = 0.0d0
              PLL%d = 0.0d0
            ELSE
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_232 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_232))%d = X(INT(OpenAD_Symbol_232))%d+
     +PLL%d
              PLL%d = 0.0d0
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_233 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_233))%d = X(INT(OpenAD_Symbol_233))%d+
     +PL%d
              PL%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_113 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_113.ne.0) THEN
            PBR%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_234 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_234))%d = X(INT(OpenAD_Symbol_234))%d+PB
     +R%d
            PBR%d = 0.0d0
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_114 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_114.ne.0) THEN
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_205 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_205))%d = X(INT(OpenAD_Symbol_205))%d+PB
     +B%d
            PBB%d = 0.0d0
            PB%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_115 = integer_tape(integer_tape_pointer)
            IF (OpenAD_Symbol_115.ne.0) THEN
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_235 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_235))%d = X(INT(OpenAD_Symbol_235))%d+
     +PB%d
              PB%d = 0.0d0
              PBB%d = 0.0d0
            ELSE
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_236 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_236))%d = X(INT(OpenAD_Symbol_236))%d+
     +PBB%d
              PBB%d = 0.0d0
              integer_tape_pointer = integer_tape_pointer-1
              OpenAD_Symbol_237 = integer_tape(integer_tape_pointer)
              X(INT(OpenAD_Symbol_237))%d = X(INT(OpenAD_Symbol_237))%d+
     +PB%d
              PB%d = 0.0d0
            ENDIF
          ENDIF
          integer_tape_pointer = integer_tape_pointer-1
          OpenAD_Symbol_116 = integer_tape(integer_tape_pointer)
          IF (OpenAD_Symbol_116.ne.0) THEN
            PBL%d = 0.0d0
          ELSE
            integer_tape_pointer = integer_tape_pointer-1
            OpenAD_Symbol_238 = integer_tape(integer_tape_pointer)
            X(INT(OpenAD_Symbol_238))%d = X(INT(OpenAD_Symbol_238))%d+PB
     +L%d
            PBL%d = 0.0d0
          ENDIF
          OpenAD_Symbol_104 = INT(OpenAD_Symbol_104)+1
        END DO
        OpenAD_Symbol_102 = INT(OpenAD_Symbol_102)+1
      END DO
          end if
        end subroutine head
