
!$OPENAD XXX File_start [OAD_intrinsics.f90]
MODULE oad_intrinsics
use OAD_active
use w2f__types
IMPLICIT NONE
SAVE
!
!     **** Statements ****
!
END MODULE

C$OPENAD XXX File_start [all_globals_mod.f]
      MODULE all_globals_mod
      use OAD_active
      use w2f__types
      IMPLICIT NONE
      SAVE
C
C     **** Statements ****
C
      END MODULE
C#########################################################
C This file is part of OpenAD released under the LGPL.   #
C The full COPYRIGHT notice can be found in the top      #
C level directory of the OpenAD distribution             #
C#########################################################
C
C$OPENAD XXX File_start [head.f]
      SUBROUTINE foo(X)
          use OAD_tape
          use OAD_rev

C original arguments get inserted before version
C         ! and declared here together with all local variables
C         ! generated by xaifBooster

      use OAD_active
      use w2f__types
      use oad_intrinsics
      use oad_intrinsics
      use oad_intrinsics
      IMPLICIT NONE
C
C     **** Parameters and Result ****
C
      type(active) :: X
C
C     **** Local Variables and Functions ****
C
      type(active) :: OpenAD_prp_0
C
C     **** Statements ****
C


          integer iaddr
          external iaddr

         if (our_rev_mode%plain) then
C original function
      X%v = (X%v+1.0D00)
          end if
          if (our_rev_mode%tape) then
C taping
      X%v = (X%v+1.0D00)
          end if
          if (our_rev_mode%adjoint) then
C adjoint
      OpenAD_prp_0%d = OpenAD_prp_0%d+X%d
      X%d = 0.0d0
      X%d = X%d+OpenAD_prp_0%d
      OpenAD_prp_0%d = 0.0d0
          end if
        end subroutine foo
C#########################################################
C This file is part of OpenAD released under the LGPL.   #
C The full COPYRIGHT notice can be found in the top      #
C level directory of the OpenAD distribution             #
C#########################################################

      SUBROUTINE bar(X)
          use OAD_tape
          use OAD_rev

C original arguments get inserted before version
C         ! and declared here together with all local variables
C         ! generated by xaifBooster

      use OAD_active
      use w2f__types
      use oad_intrinsics
      use oad_intrinsics
      use oad_intrinsics
      IMPLICIT NONE
C
C     **** Parameters and Result ****
C
      type(active) :: X(1:1)
C
C     **** Local Variables and Functions ****
C
      type(active) :: OpenAD_prp_1
C
C     **** Statements ****
C


          integer iaddr
          external iaddr

         if (our_rev_mode%plain) then
C original function
      X(1)%v = (X(1)%v+1.0D00)
          end if
          if (our_rev_mode%tape) then
C taping
      X(1)%v = (X(1)%v+1.0D00)
          end if
          if (our_rev_mode%adjoint) then
C adjoint
      OpenAD_prp_1%d = OpenAD_prp_1%d+X(1)%d
      X(1)%d = 0.0d0
      X(1)%d = X(1)%d+OpenAD_prp_1%d
      OpenAD_prp_1%d = 0.0d0
          end if
        end subroutine bar
C#########################################################
C This file is part of OpenAD released under the LGPL.   #
C The full COPYRIGHT notice can be found in the top      #
C level directory of the OpenAD distribution             #
C#########################################################

      SUBROUTINE head(X, Y)
          use OAD_tape
          use OAD_rev

C original arguments get inserted before version
C         ! and declared here together with all local variables
C         ! generated by xaifBooster

      use OAD_active
      use w2f__types
      use oad_intrinsics
      use oad_intrinsics
      use oad_intrinsics
      IMPLICIT NONE
C
C     **** Parameters and Result ****
C
      type(active) :: X(1:2)
      type(active) :: Y(1:2)
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(Y)
      interface
        SUBROUTINE foo(X)
        use OAD_active
        use w2f__types
        type(active) :: X
        END SUBROUTINE
      end interface
      interface
        SUBROUTINE bar(X)
        use OAD_active
        use w2f__types
        type(active) :: X(1:1)
        END SUBROUTINE
      end interface


          integer iaddr
          external iaddr
C
C     **** Statements ****
C

         if (our_rev_mode%plain) then
C original function
      CALL foo(X(1))
      Y(1:2)%v = X(1:2)%v
      CALL bar(Y(2:2))
          end if
          if (our_rev_mode%tape) then
C taping
      CALL foo(X(1))
      Y(1:2)%v = X(1:2)%v
      CALL bar(Y(2:2))
          end if
          if (our_rev_mode%adjoint) then
C adjoint
      CALL bar(Y(2:2))
      X(1:2)%d = X(1:2)%d+Y(1:2)%d
      Y(1:2)%d = 0.0d0
      CALL foo(X(1))
          end if
        end subroutine head
