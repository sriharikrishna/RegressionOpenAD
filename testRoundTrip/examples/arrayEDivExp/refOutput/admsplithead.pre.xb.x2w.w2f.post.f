C#########################################################
C This file is part of OpenAD released under the LGPL.   #
C The full COPYRIGHT notice can be found in the top      #
C level directory of the OpenAD distribution             #
C#########################################################
C
C$OPENAD XXX File_start [head.f]
      SUBROUTINE head(X, Y)
          use OAD_tape
          use OAD_rev

C original arguments get inserted before version
C         ! and declared here together with all local variables
C         ! generated by xaifBooster

      use OAD_active
      use w2f__types
      use oad_intrinsics
      use oad_intrinsics
      use oad_intrinsics
      IMPLICIT NONE
C
C     **** Parameters and Result ****
C
      type(active) :: X(1:2)
      type(active) :: Y(1:2)
C
C     **** Local Variables and Functions ****
C
      REAL(w2f__8) OpenAD_Symbol_0(1 : 2)
      REAL(w2f__8) OpenAD_acc_0(1 : 2)
      REAL(w2f__8) OpenAD_aux_0(1 : 2)
      REAL(w2f__8) OpenAD_lin_0(1 : 2)
C
C     **** Top Level Pragmas ****
C
C$OPENAD INDEPENDENT(X)
C$OPENAD DEPENDENT(Y)
C
C     **** Statements ****
C


          integer iaddr
          external iaddr
C$OPENAD XXX Template ad_template.f

         if (our_rev_mode%plain) then
C original function
      Y(1:2)%v = EXP(X%v*5.0D-01)
          end if
          if (our_rev_mode%tape) then
C taping
C$OPENAD XXX Template ad_template.f
      OpenAD_aux_0 = EXP(X%v*5.0D-01)
      OpenAD_lin_0 = OpenAD_aux_0
      Y(1:2)%v = OpenAD_aux_0
      OpenAD_acc_0 = (5.0D-01*OpenAD_lin_0)
      double_tape(double_tape_pointer:double_tape_pointer+size(OpenAD_ac
     +c_0,1)-1) = OpenAD_acc_0(:)
      double_tape_pointer = double_tape_pointer+size(OpenAD_acc_0,1)
          end if
          if (our_rev_mode%adjoint) then
C adjoint
      double_tape_pointer = double_tape_pointer-size(OpenAD_Symbol_0,1)
      OpenAD_Symbol_0(:) = double_tape(double_tape_pointer:double_tape_p
     +ointer+size(OpenAD_Symbol_0,1)-1)
      X%d = X%d+Y(1:2)%d*(OpenAD_Symbol_0)
      Y(1:2)%d = 0.0d0
          end if
        end subroutine head
